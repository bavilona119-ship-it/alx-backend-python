from django.test import TestCase
from django.contrib.auth.models import User
from .models import Message, MessageHistory


class MessageEditSignalTest(TestCase):
    def setUp(self):
        self.sender = User.objects.create_user(username='alice', password='test123')
        self.receiver = User.objects.create_user(username='bob', password='test123')

    def test_message_edit_creates_history(self):
        # Création initiale d’un message
        message = Message.objects.create(
            sender=self.sender,
            receiver=self.receiver,
            content="Hello Bob!"
        )
        self.assertFalse(message.edited)

        # Modification du message
        message.content = "Hi Bob! How are you?"
        message.save()

        # Vérifie que le message est marqué comme édité
        message.refresh_from_db()
        self.assertTrue(message.edited)

        # Vérifie qu’un historique a été créé
        history = MessageHistory.objects.filter(message=message).first()
        self.assertIsNotNone(history)
        self.assertEqual(history.old_content, "Hello Bob!")
        self.assertEqual(history.edited_by, self.sender)

        # Vérifie que le timestamp d'édition existe
        self.assertIsNotNone(history.edited_at)

    def test_no_history_created_if_content_not_changed(self):
        # Crée un message
        message = Message.objects.create(
            sender=self.sender,
            receiver=self.receiver,
            content="No edit yet"
        )

        # Sauvegarde sans changer le contenu
        message.save()

        # Vérifie qu’aucune historique n’a été créée
        history_count = MessageHistory.objects.filter(message=message).count()
        self.assertEqual(history_count, 0)
